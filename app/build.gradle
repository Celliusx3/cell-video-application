apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.cellstudio.cellvideo"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    dataBinding {
        enabled = true
    }
    androidExtensions {
        experimental = true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    ext.EXOPLAYER_VERSION = "2.11.3"
    ext.RETROFIT_VERSION = '2.3.0'
    ext.GSON_VERSION = '2.8.5'
    ext.OKHTTP_VERSION = '3.7.0'
    ext.RETROFIT_CONVERTER_GSON_VERSION = '2.3.0'
    ext.DAGGER_VERSION = '2.26'
    ext.RXANDROID_VERSION = '2.1.1'
    ext.GLIDE_VERSION = '4.11.0'
    ext.GRAVITY_SNAP_VERSION = "2.2.0"
    ext.MATERIAL_VERSION = "1.1.0"
    ext.ROOM_VERSION = "2.2.5"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'com.google.android.material:material:1.1.0'

    // Exoplayer
    implementation "com.google.android.exoplayer:exoplayer:${EXOPLAYER_VERSION}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${RETROFIT_VERSION}"
    implementation "com.google.code.gson:gson:${GSON_VERSION}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${RETROFIT_VERSION}"
    implementation "com.squareup.retrofit2:converter-gson:${RETROFIT_CONVERTER_GSON_VERSION}"

    // OkHttp - HTTP Client which is used by Retrofit
    implementation "com.squareup.okhttp3:okhttp:${OKHTTP_VERSION}"
    implementation "com.squareup.okhttp3:logging-interceptor:${OKHTTP_VERSION}"

    // Dagger
    implementation "com.google.dagger:dagger-android:${DAGGER_VERSION}"
    implementation "com.google.dagger:dagger-android-support:${DAGGER_VERSION}" // if you use the support libraries

    kapt "com.google.dagger:dagger-android-processor:${DAGGER_VERSION}"
    kapt "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"

    // RxAndroid
    implementation "io.reactivex.rxjava2:rxandroid:${RXANDROID_VERSION}"

    // Glide
    implementation "com.github.bumptech.glide:glide:${GLIDE_VERSION}"
    annotationProcessor "com.github.bumptech.glide:compiler:${GLIDE_VERSION}"

    // Gravity Snap Helper
    implementation "com.github.rubensousa:gravitysnaphelper:${GRAVITY_SNAP_VERSION}"

    // Material
    implementation "com.google.android.material:material:${MATERIAL_VERSION}"

    implementation "androidx.room:room-runtime:${ROOM_VERSION}"
    kapt "androidx.room:room-compiler:${ROOM_VERSION}" // For Kotlin use kapt instead of annotationProcessor

    // optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:${ROOM_VERSION}"


}
